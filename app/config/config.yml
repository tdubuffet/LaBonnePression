imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@FrontBundle/Resources/config/services.yml" }
    - { resource: "@CrawlerBundle/Resources/config/services.yml" }
    - { resource: "@InstitutionBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        app:
            client: default
            settings:
                index:
                    analysis:
                        analyzer:
                            custom_french_analyzer:
                                type: custom
                                tokenizer: letter
                                filter: ["standard", "asciifolding", "lowercase", "french_stem", "stop_fr", "min_length_filter"]
                            custom_analyzer:
                                type: custom
                                tokenizer: letter
                                filter: ["standard", "asciifolding", "lowercase", "min_length_filter"]
                        filter:
                            stop_fr:
                                type: "stop"
                                stopwords: ["l", "m", "t", "qu", "n", "s", "j", "d"]
                            min_length_filter:
                                type: length
                                min: 3
            types:
                institution:
                    mappings:
                        id: ~
                        name: { analyzer: 'custom_french_analyzer'}
                        postalCode: ~
                        city: { analyzer: 'custom_french_analyzer'}
                        latitude: ~
                        longitude: ~
                        location: { type: geo_point}
                        googleRating: ~
                        googlePlaceId: ~
                        googleReference: ~
                        googleTypes: ~
                    persistence:
                        #model_to_elastica_transformer:
                        #    service: institution.populate
                        driver: orm
                        model: InstitutionBundle\Entity\Institution
                        provider: ~
                        listener:
                            immediate: ~
                        finder: ~